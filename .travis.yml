dist: xenial
sudo: required
language: julia
matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=gcc GCC=5
      julia: 1.0.1
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env: COMPILER=gcc GCC=6
      julia: 1.1.1
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: COMPILER=gcc GCC=7
      julia: 1.2.0
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: COMPILER=gcc GCC=7 USE_CONDA_XTENSOR=1
      julia: 1.2.0
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=gcc GCC=5
      julia: nightly
    - os: osx
      osx_image: xcode8
      compiler: clang
      julia: 1.1.1
  allow_failures:
    - julia: nightly

env:
  global:
    - MINICONDA_VERSION="latest"
    - MINICONDA_LINUX="Linux-x86_64"
    - MINICONDA_OSX="MacOSX-x86_64"
before_install:
    - |
      # Configure build variables
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        if [[ "$COMPILER" == "gcc" ]]; then
          export CXX=g++-$GCC CC=gcc-$GCC;
        fi
        if [[ "$COMPILER" == "clang" ]]; then
          export CXX=clang++-$CLANG CC=clang-$CLANG;
        fi
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        export CXX=clang++ CC=clang;
      fi

install:
    # Define the version of miniconda to download
    - if [[ "$USE_CONDA_XTENSOR" == 1 ]]; then
        if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
          MINICONDA_OS=$MINICONDA_LINUX;
        elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
          MINICONDA_OS=$MINICONDA_OSX;
        fi;
        wget "http://repo.continuum.io/miniconda/Miniconda3-$MINICONDA_VERSION-$MINICONDA_OS.sh" -O miniconda.sh;
        bash miniconda.sh -b -p $HOME/miniconda;
        export PATH="$HOME/miniconda/bin:$PATH";
        hash -r;
        conda config --set always_yes yes --set changeps1 no;
        conda update -q conda;
        conda install cmake -c conda-forge;
        conda install julia xtensor==0.20.8 xtensor-julia=0.8.4 libcxxwrap-julia=0.5.3 -c conda-forge;
        export XTENSOR_PREFIX=$HOME/miniconda;
        export JLCXX_DIR=$HOME/miniconda;
      fi
    - julia -E "using Pkg; Pkg.add(PackageSpec(name=\"CxxWrap\", version=\"0.8.2\"))"
    - julia --project=. -E "using Pkg; Pkg.build()"

script:
    - julia --project=. -E "using Pkg; Pkg.test()"
